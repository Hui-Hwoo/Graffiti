{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useCallback } from \"react\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};\n_s(useForm, \"9KSZbOpELKQ/G4RvKOYST2kYsMo=\");","map":{"version":3,"names":["useReducer","useCallback","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id","setFormData","inputData","formValidity"],"sources":["/Users/huihu/Documents/Graffiti/frontend/src/shared/hooks/hook-form.js"],"sourcesContent":["import { useReducer, useCallback } from \"react\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if(!state.inputs[inputId]){\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: {\n                        value: action.value,\n                        isValid: action.isValid,\n                    },\n                },\n                isValid: formIsValid,\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity,\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: \"INPUT_CHANGE\",\n            value: value,\n            isValid: isValid,\n            inputId: id,\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity)=>{\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n    }, [])\n\n    return [formState, inputHandler, setFormData]\n};\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAChC,IAAG,CAACL,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,EAAC;UACtB;QACJ;QACA,IAAIA,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC5BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC/C,CAAC,MAAM;UACHH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC9D;MACJ;MACA,OAAO;QACH,GAAGN,KAAK;QACRK,MAAM,EAAE;UACJ,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YACdG,KAAK,EAAEN,MAAM,CAACM,KAAK;YACnBD,OAAO,EAAEL,MAAM,CAACK;UACpB;QACJ,CAAC;QACDA,OAAO,EAAEH;MACb,CAAC;IACL,KAAK,UAAU;MACX,OAAO;QACHE,MAAM,EAAEJ,MAAM,CAACI,MAAM;QACrBC,OAAO,EAAEL,MAAM,CAACE;MACpB,CAAC;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAG,CAACC,aAAa,EAAEC,mBAAmB,KAAK;EAAA;EAC3D,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACE,WAAW,EAAE;IAClDM,MAAM,EAAEI,aAAa;IACrBH,OAAO,EAAEI;EACb,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAGf,WAAW,CAAC,CAACgB,EAAE,EAAEP,KAAK,EAAED,OAAO,KAAK;IACrDM,QAAQ,CAAC;MACLV,IAAI,EAAE,cAAc;MACpBK,KAAK,EAAEA,KAAK;MACZD,OAAO,EAAEA,OAAO;MAChBF,OAAO,EAAEU;IACb,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGjB,WAAW,CAAC,CAACkB,SAAS,EAAEC,YAAY,KAAG;IACvDL,QAAQ,CAAC;MACLV,IAAI,EAAE,UAAU;MAChBG,MAAM,EAAEW,SAAS;MACjBb,WAAW,EAAEc;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACN,SAAS,EAAEE,YAAY,EAAEE,WAAW,CAAC;AACjD,CAAC;AAAC,GAxBWP,OAAO"},"metadata":{},"sourceType":"module"}