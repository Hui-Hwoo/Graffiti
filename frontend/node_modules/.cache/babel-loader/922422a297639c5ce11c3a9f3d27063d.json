{"ast":null,"code":"var _jsxFileName = \"/Users/huihu/Documents/Graffiti/frontend/src/places/pages/UserPlaces.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport ImageGrid from \"../components/ImageGrid\";\n\n// const DUMMY_PLACES = [\n//     {\n//         id: \"p1\",\n//         title: \"Two Embarcadera Center\",\n//         description: \"WeWork building!\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"Two Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n//     {\n//         id: \"p2\",\n//         title: \"One Embarcadera Center\",\n//         description: \"Shopping !\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"One Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n//     {\n//         id: \"p3\",\n//         title: \"Two Embarcadera Center\",\n//         description: \"WeWork building!\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"Two Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPlaces = () => {\n  _s();\n  const userId = useParams().userId;\n  //To send AJAX request in React(asks for uploaded images)\n  const [places, setPlaces] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users/places\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: userId\n      }),\n      //headers tell backend that body is json style\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res);\n      return res.json();\n    }).then(result => {\n      setPlaces(result.places);\n    }, error => {\n      console.log(\"UserPlaces can not get images!\");\n      console.log(error);\n    });\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n      places: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPlaces, \"xxb1XbIsrWNZn/89L7cvBuv9zJE=\", false, function () {\n  return [useParams];\n});\n_c = UserPlaces;\nexport default UserPlaces;\nvar _c;\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Title","ImageGrid","UserPlaces","userId","places","setPlaces","fetch","method","body","JSON","stringify","email","headers","then","res","console","log","json","result","error"],"sources":["/Users/huihu/Documents/Graffiti/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport ImageGrid from \"../components/ImageGrid\";\n\n// const DUMMY_PLACES = [\n//     {\n//         id: \"p1\",\n//         title: \"Two Embarcadera Center\",\n//         description: \"WeWork building!\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"Two Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n//     {\n//         id: \"p2\",\n//         title: \"One Embarcadera Center\",\n//         description: \"Shopping !\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"One Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n//     {\n//         id: \"p3\",\n//         title: \"Two Embarcadera Center\",\n//         description: \"WeWork building!\",\n//         url: \"https://res.cloudinary.com/wework/image/upload/c_scale,w_800/v1/Defaults_DO_NOT_DELETE/Meeting/bookable-placeholder-05.jpg\",\n//         address: \"Two Embarcadero Center, San Francisco, CA 94111\",\n//         location: {\n//             lat: 37.7947923,\n//             lng: -122.4005988,\n//         },\n//         creator: \"u1\",\n//     },\n// ];\n\nconst UserPlaces = () => {\n    const userId = useParams().userId;\n    //To send AJAX request in React(asks for uploaded images)\n    const [places, setPlaces] = useState([]);\n    useEffect(() => {\n        fetch(\"http://localhost:3000/users/places\", {\n            method: \"POST\",\n            body: JSON.stringify({ email: userId }),\n            //headers tell backend that body is json style\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((res) => {\n                console.log(res);\n                return res.json();\n            })\n            .then(\n                (result) => {\n                    setPlaces(result.places);\n                },\n                (error) => {\n                    console.log(\"UserPlaces can not get images!\");\n                    console.log(error);\n                }\n            );\n    }, [userId]);\n\n    return (\n        <div>\n            <Title />\n            <ImageGrid places={places} />\n        </div>\n    );\n};\n\nexport default UserPlaces;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAMC,MAAM,GAAGJ,SAAS,EAAE,CAACI,MAAM;EACjC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,oCAAoC,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER;MAAO,CAAC,CAAC;MACvC;MACAS,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGC,IAAI,CAAEC,GAAG,IAAK;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,OAAOA,GAAG,CAACG,IAAI,EAAE;IACrB,CAAC,CAAC,CACDJ,IAAI,CACAK,MAAM,IAAK;MACRb,SAAS,CAACa,MAAM,CAACd,MAAM,CAAC;IAC5B,CAAC,EACAe,KAAK,IAAK;MACPJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7CD,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB,CAAC,CACJ;EACT,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,oBACI;IAAA,wBACI,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT,QAAC,SAAS;MAAC,MAAM,EAAEC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEd,CAAC;AAAC,GAlCIF,UAAU;EAAA,QACGH,SAAS;AAAA;AAAA,KADtBG,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}